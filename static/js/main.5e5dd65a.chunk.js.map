{"version":3,"sources":["store/index.js","components/User/User.js","proptype/proptype.js","components/Comment/Comment.js","components/Comment/index.js","components/CommentList/CommentList.js","components/Post/Post.js","components/Post/index.js","components/PostList/PostList.js","components/PostList/index.js","App/App.js","App/index.js","index.js"],"names":["BASE_URL","ACTION_TYPES","START_LOADING","HANDLE_SUCCESS","HANDLE_ERROR","DELETE_POST","DELETE_COMMENT","SEARCH_POST","loadPosts","dispatch","type","Promise","all","fetch","concat","then","_ref","_ref2","Object","slicedToArray","posts","users","comments","json","_ref3","data","_ref4","postsWithComments","map","post","_objectSpread","user","find","id","userId","filter","comment","postId","payload","catch","initialState","originalPosts","isLoaded","isLoading","hasError","store","createStore","state","arguments","length","undefined","action","filterComments","array","item","title","includes","body","applyMiddleware","thunk","User","PropTypes","bool","isRequired","func","arrayOf","object","shape","number","string","name","email","street","suite","city","zipcode","address","react_default","a","createElement","href","className","src","alt","Comment","deleteComment","components_User_User","onClick","CommentHandler","connect","ownProps","CommentList","key","Post","deletePost","components_CommentList_CommentList","PostHandler","PostList","PostListHandler","App","searchWord","handleSearchChange","value","target","_this","setState","searchPost","props","_this$props","this","Fragment","placeholder","onChange","disabled","React","Component","EnhancedApp","ReactDOM","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.5e5dd65a.chunk.js","sourcesContent":["import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nconst ACTION_TYPES = {\r\n  START_LOADING: 'START_LOADING',\r\n  HANDLE_SUCCESS: 'HANDLE_SUCCESS',\r\n  HANDLE_ERROR: 'HANDLE_ERROR',\r\n  DELETE_POST: 'DELETE_POST',\r\n  DELETE_COMMENT: 'DELETE_COMMENT',\r\n  SEARCH_POST: 'SEARCH_POST',\r\n};\r\n\r\nexport const startLoading = () => ({\r\n  type: ACTION_TYPES.START_LOADING,\r\n});\r\n\r\nexport const addData = data => ({\r\n  type: ACTION_TYPES.HANDLE_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const handleError = () => ({\r\n  type: ACTION_TYPES.HANDLE_ERROR,\r\n});\r\n\r\nexport const deletePost = id => ({\r\n  type: ACTION_TYPES.DELETE_POST,\r\n  payload: id,\r\n});\r\n\r\nexport const deleteComment = id => ({\r\n  type: ACTION_TYPES.DELETE_COMMENT,\r\n  payload: id,\r\n});\r\n\r\nexport const searchPost = value => ({\r\n  type: ACTION_TYPES.SEARCH_POST,\r\n  payload: value,\r\n});\r\n\r\nexport const loadPosts = () => (dispatch) => {\r\n  dispatch(startLoading());\r\n\r\n  Promise.all([\r\n    fetch(`${BASE_URL}/posts`),\r\n    fetch(`${BASE_URL}/users`),\r\n    fetch(`${BASE_URL}/comments`),\r\n  ])\r\n    .then(([posts, users, comments]) => Promise.all([\r\n      posts.json(),\r\n      users.json(),\r\n      comments.json(),\r\n    ]))\r\n    .then(([posts, users, comments]) => {\r\n      const postsWithComments = posts.map(post => ({\r\n        ...post,\r\n        user: users.find(user => user.id === post.userId),\r\n        comments: comments.filter(comment => comment.postId === post.id),\r\n      }));\r\n\r\n      dispatch(addData(postsWithComments));\r\n    })\r\n    .catch(() => dispatch(handleError()));\r\n};\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  originalPosts: [],\r\n  isLoaded: false,\r\n  isLoading: false,\r\n  hasError: false,\r\n};\r\n\r\nfunction reducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.START_LOADING: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        hasError: false,\r\n      };\r\n    }\r\n\r\n    case ACTION_TYPES.HANDLE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        originalPosts: action.payload,\r\n        isLoaded: true,\r\n        isLoading: false,\r\n      };\r\n    }\r\n\r\n    case ACTION_TYPES.HANDLE_ERROR: {\r\n      return {\r\n        ...state,\r\n        hasError: true,\r\n        isLoading: false,\r\n      };\r\n    }\r\n\r\n    case ACTION_TYPES.DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.payload),\r\n        originalPosts: state.originalPosts\r\n          .filter(post => post.id !== action.payload),\r\n      };\r\n    }\r\n\r\n    case ACTION_TYPES.DELETE_COMMENT: {\r\n      const filterComments = (array, id) => (\r\n        array\r\n          .map(item => ({\r\n            ...item,\r\n            comments: item.comments\r\n              .filter(comment => comment.id !== id),\r\n          }))\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        posts: filterComments(state.posts, action.payload),\r\n        originalPosts: filterComments(state.originalPosts, action.payload),\r\n      };\r\n    }\r\n\r\n    case ACTION_TYPES.SEARCH_POST: {\r\n      return {\r\n        ...state,\r\n        posts: state.originalPosts.filter(post => (\r\n          (\r\n            post.title.includes(action.payload)\r\n          ) || (\r\n            post.body.includes(action.payload)\r\n          )\r\n        )),\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk),\r\n);","import React from 'react';\r\nimport './User.css';\r\nimport { UserPropTypes } from '../../proptype/proptype';\r\n\r\nconst User = ({ name, email, address }) => (\r\n  <div>\r\n    <a href=\"/ \">\r\n      <img className=\"user-icon\" src=\"./images/user-icon.png\" alt=\"user-ipon\" />\r\n      {name}\r\n    </a>\r\n    <p>\r\n      {email}\r\n    </p>\r\n    {address && (\r\n      <p>\r\n        {`${address.street}, ${address.suite},\r\n        ${address.city}, ${address.zipcode}`}\r\n      </p>\r\n    )}\r\n  </div>\r\n);\r\n\r\nUser.propTypes = UserPropTypes;\r\n\r\nexport default User;","import PropTypes from 'prop-types';\r\n\r\nexport const AppPropTypes = {\r\n  isLoaded: PropTypes.bool.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  hasError: PropTypes.bool.isRequired,\r\n  loadPosts: PropTypes.func.isRequired,\r\n  searchPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const PostListPropTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport const PostPropTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    body: PropTypes.string,\r\n    user: PropTypes.object,\r\n    comments: PropTypes.array,\r\n  }).isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const CommentListPropTypes = {\r\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport const CommentPropTypes = {\r\n  comment: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    body: PropTypes.string,\r\n  }).isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const UserPropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  address: PropTypes.shape({\r\n    street: PropTypes.string,\r\n    suite: PropTypes.string,\r\n    city: PropTypes.string,\r\n    zipcode: PropTypes.string,\r\n  }),\r\n};","import React from 'react';\r\nimport './Comment.css';\r\nimport User from '../User/User';\r\nimport { CommentPropTypes } from '../../proptype/proptype';\r\n\r\nconst Comment = ({ comment, deleteComment }) => {\r\n  const { name, email, body } = comment;\r\n\r\n  return (\r\n    <div className=\"comment\">\r\n      <User name={name} email={email} />\r\n      <p className=\"comment-text\">\r\n        {body}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn-delete-comment\"\r\n        onClick={deleteComment}\r\n      >\r\n        x\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nComment.propTypes = CommentPropTypes;\r\n\r\nexport default Comment;","import { connect } from 'react-redux';\r\nimport Comment from './Comment';\r\nimport { deleteComment } from '../../store';\r\n\r\nconst CommentHandler = connect(\r\n  null,\r\n  (dispatch, ownProps) => ({\r\n    deleteComment: () => dispatch(deleteComment(ownProps.comment.id)),\r\n  }),\r\n)(Comment);\r\n\r\nexport {\r\n  CommentHandler as Comment,\r\n};","import React from 'react';\r\nimport { Comment } from '../Comment';\r\nimport './CommentList.css';\r\nimport { CommentListPropTypes } from '../../proptype/proptype';\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <div className=\"comments\">\r\n    <h3 className=\"comments-heading\">Comments:</h3>\r\n    {comments.map(comment => (\r\n      <Comment comment={comment} key={comment.id} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nCommentList.propTypes = CommentListPropTypes;\r\n\r\nexport default CommentList;","import React from 'react';\r\nimport './Post.css';\r\nimport User from '../User/User';\r\nimport CommentList from '../CommentList/CommentList';\r\nimport { PostPropTypes } from '../../proptype/proptype';\r\n\r\nconst Post = ({ post, deletePost }) => {\r\n  const { user, comments } = post;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{post.title}</h2>\r\n      <p>{post.body}</p>\r\n      <User name={user.name} email={user.email} address={user.address} />\r\n      <CommentList comments={comments} />\r\n      <button\r\n        type=\"button\"\r\n        onClick={deletePost}\r\n      >\r\n        x\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nPost.propTypes = PostPropTypes;\r\n\r\nexport default Post;","import { connect } from 'react-redux';\r\nimport Post from './Post';\r\nimport { deletePost } from '../../store';\r\n\r\nconst PostHandler = connect(\r\n  null,\r\n  (dispatch, ownProps) => ({\r\n    deletePost: () => dispatch(deletePost(ownProps.post.id)),\r\n  }),\r\n)(Post);\r\n\r\nexport {\r\n  PostHandler as Post,\r\n};","import React from 'react';\r\nimport { Post } from '../Post';\r\nimport { PostListPropTypes } from '../../proptype/proptype';\r\n\r\nconst PostList = ({ posts }) => (\r\n  <div>\r\n    {posts.map(post => (\r\n      <Post post={post} key={post.id} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nPostList.propTypes = PostListPropTypes;\r\n\r\nexport default PostList;","import { connect } from 'react-redux';\r\nimport PostList from './PostList';\r\n\r\nconst PostListHandler = connect(\r\n  state => ({ posts: state.posts }),\r\n)(PostList);\r\n\r\nexport {\r\n  PostListHandler as PostList,\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport { PostList } from '../components/PostList';\r\nimport { AppPropTypes } from '../proptype/proptype';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    searchWord: '',\r\n  }\r\n\r\n  handleSearchChange = ({ target: { value } }) => {\r\n    this.setState({ searchWord: value });\r\n    const { searchPost } = this.props;\r\n    searchPost(value);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoaded,\r\n      isLoading,\r\n      hasError,\r\n      loadPosts,\r\n    } = this.props;\r\n    const { searchWord } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <h1 className=\"heading\">Dynamic list of todos</h1>\r\n        {isLoaded ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={searchWord}\r\n              name=\"search-input\"\r\n              placeholder=\"Search...\"\r\n              className=\"search\"\r\n              onChange={this.handleSearchChange}\r\n            />\r\n            <PostList />\r\n          </>\r\n        ) : (\r\n          <>\r\n            {hasError && (\r\n              <h2 className=\"error-title\">\r\n                Oh, something went wrong! Please, try again\r\n              </h2>\r\n            )}\r\n            <button\r\n              type=\"button\"\r\n              className=\"load-button\"\r\n              onClick={loadPosts}\r\n              disabled={isLoading}\r\n            >\r\n              {isLoading ? 'Loading...' : 'Load posts'}\r\n            </button>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = AppPropTypes;\r\n\r\nexport default App;","import { connect } from 'react-redux';\r\nimport App from './App';\r\nimport { loadPosts, searchPost } from '../store';\r\n\r\nconst EnhancedApp = connect(\r\n  state => ({\r\n    isLoaded: state.isLoaded,\r\n    isLoading: state.isLoading,\r\n    hasError: state.hasError,\r\n  }),\r\n  dispatch => ({\r\n    loadPosts: () => dispatch(loadPosts()),\r\n    searchPost: value => dispatch(searchPost(value)),\r\n  }),\r\n)(App);\r\n\r\nexport {\r\n  EnhancedApp as App,\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport './index.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n), document.getElementById('root'));"],"sourceRoot":""}